from paho.mqtt import client as mqtt
import sqlite3
import sys
import psutil
import subprocess

broker = '192.168.1.19'
port = 1883
username = 'qwerty'
password = '12qwerty21'

def get_wifi_signal_strength(interface):
    try:
        output = subprocess.check_output(["iwconfig", interface])
        output = output.decode("utf-8")
        signal_line = [line for line in output.split('\n') if "Signal level" in line]
        if signal_line:
            signal_strength = signal_line[0].split("Signal level=")[1].split()[0]
            return signal_strength
        else:
            return "Signal level not found"
    except subprocess.CalledProcessError:
        return "Error retrieving signal strength"

def on_connect(client, userdata, flags, rc):
    print("Connected with result code " + str(rc))
    client.subscribe("testTopic")
    
    process_id = os.getpid()
    print("Process ID:", process_id)

    interface = "wlan0"
    signal_strength = get_wifi_signal_strength(interface)
    print(f"WiFi Signal Strength of {interface}: {signal_strength} dBm")

def on_message(client, userdata, msg):
    payload_str = msg.payload.decode()  # Convert the payload from bytes to string
    print(payload_str)  # Print the payload as a string

    # Get the size of the received message
    size = len(payload_str)

    # Convert the size to a string
    size_str = str(size)

    # Connect to the SQLite database
    global cursor
    with sqlite3.connect('sdata.db') as conn:
        cursor = conn.cursor()

    # Create the table if it doesn't exist
    create_table(cursor)

    insert_data(size_str, payload_str)  # Insert data into the database

    # Commit and close the database connection
    conn.commit()
    conn.close()

def run_mqtt_client():
    client = mqtt.Client()
    client.username_pw_set(username, password)

    client.on_connect = on_connect
    client.on_message = on_message

    client.connect(broker, port, 60)

    # Start the MQTT loop (this will keep the client running and processing messages)
    try:
        client.loop_forever()
    except KeyboardInterrupt:
        print("Exiting...")
        client.disconnect()
        sys.exit(0)

def create_table(cursor):
    cursor.execute('''CREATE TABLE IF NOT EXISTS rece (
                        time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        size INTEGER,
                        msg TXT
                    )''')


def insert_data(size, payload_str):
    cursor.execute("INSERT INTO rece (size, msg) VALUES (?, ?)", (size, payload_str))

if __name__ == '__main__':

    run_mqtt_client()
