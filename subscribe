import paho.mqtt.client as mqtt
import sqlite3

broker = '192.168.1.7'
port = 1883
username = 'qwerty'
password = '12qwerty21'

def on_connect(client, userdata, flags, rc):
    print("Connected with result code " + str(rc))
    client.subscribe("testTopic")

def on_message(client, userdata, msg):
    payload_str = msg.payload.decode()  # Convert the payload from bytes to string
    print(payload_str)  # Print the payload as a string

    # Get the size of the received message
    size = len(payload_str)

    # Connect to the SQLite database    
    conn = sqlite3.connect('data.db')
    cursor = conn.cursor()

    insert_data(cursor, size, msg)  # Insert data into the database

    # Commit and close the database connection
    conn.commit()
    conn.close()

def run_mqtt_client():
    client = mqtt.Client()
    client.username_pw_set(username, password)

    client.on_connect = on_connect
    client.on_message = on_message

    client.connect(broker, port, 60)

    # Start the MQTT loop (this will keep the client running and processing messages)
    try:
        client.loop_forever()
    except KeyboardInterrupt:
        print("Exiting...")
        client.disconnect()
        sys.exit(0

def create_table(cursor):
    cursor.execute('''CREATE TABLE IF NOT EXISTS rece (
                        time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        size INTEGER,
                        msg TXT
                    )''')

def insert_data(cursor, size, msg):
    cursor.execute("INSERT INTO rece (size, msg) VALUES (?, ?)", (str(size), str(msg)))

if __name__ == '__main__':
    # Connect to the SQLite database
    conn = sqlite3.connect('data.db')
    cursor = conn.cursor()

    # Create the table if it doesn't exist
    create_table(cursor)

    # Commit and close the database connection
    conn.commit()
    conn.close()

    run_mqtt_client()
