#!/usr/bin/env python
import pika, sys, os
import sqlite3
import time

def create_table(cursor):
    cursor.execute('''CREATE TABLE IF NOT EXISTS received_data (
                        time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        size INTEGER
                    )''')

def insert_data(cursor, size, timestamp):
    cursor.execute("INSERT INTO received_data (time, size) VALUES (?, ?)", (timestamp, size))

def main():
    credentials = pika.PlainCredentials('qwerty', 'qwerty')
    connection = pika.BlockingConnection(pika.ConnectionParameters(host='broker.local', credentials=credentials))
    channel = connection.channel()

    channel.queue_declare(queue='hello')

    def callback(ch, method, properties, body):
        size = len(body)
        timestamp = time.strftime('%Y-%m-%d %H:%M:%S.%f')[:-3]  # Get time with milliseconds
        print(f" [x] Received {body}, Size: {size}, Time: {timestamp}")
        
        conn = sqlite3.connect('received_data.db')
        cursor = conn.cursor()

        create_table(cursor)
        insert_data(cursor, size, timestamp)

        conn.commit()
        conn.close()

    channel.basic_consume(queue='hello', on_message_callback=callback, auto_ack=True)

    print(' [*] Waiting for messages. To exit press CTRL+C')
    channel.start_consuming()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print('Interrupted')
        try:
            sys.exit(0)
        except SystemExit:
            os._exit(0)
