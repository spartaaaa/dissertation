import random
import time
import sqlite3
import sys

from paho.mqtt import client as mqtt_client

broker = 'broker.local'
port = 8883
topic = "testTopic"
client_id = f'python-mqtt-{random.randint(0, 1000)}'
username = 'qwerty'
password = '12qwerty21'

def connect_mqtt():
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(client_id)
    client.username_pw_set(username, password)
    client.tls_set(ca_certs="/home/qwerty/certificates/ca.crt")
    client.on_connect = on_connect
    client.connect(broker, port, 60)
    return client

def create_table(cursor):
    cursor.execute('''CREATE TABLE IF NOT EXISTS authentication (
                        time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        size INTEGER
                    )''')

def insert_data(cursor, size):
    cursor.execute("INSERT INTO authentication (size) VALUES (?)", (str(size),))

def publish(client, cursor):
    try:
        conn = sqlite3.connect('pdata.db')
        cursor = conn.cursor()

        create_table(cursor)

        msg_count = 1
        while True:
            time.sleep(1)
            msg = f"{msg_count}"
            size = len(msg)
            result = client.publish(topic, msg)
            status = result[0]
            if status == 0:
                print(f"Send `{size}` to topic `{topic}`")
            else:
                print(f"Failed to send message to topic {topic}")
            insert_data(cursor, size)
            msg_count *= 100000
    except KeyboardInterrupt:
        print("Publishing stopped by user")
    finally:
        conn.commit()
        conn.close()

def run():
    client = connect_mqtt()
    client.loop_start()
    publish(client)

if __name__ == '__main__':
    run()
